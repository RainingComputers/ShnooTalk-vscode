{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "ShnooTalk",
    "patterns": [
        {
            "comment": "Single line comment",
            "name": "comment.line.number-sign.shnootalk",
            "match": "#[^\n\r]*"
        },
        {
            "comment": "Conditional operators",
            "name": "keyword.operator.shnootalk",
            "match": "\\b(and|or|not)\\b"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#literals"
        },
        {
            "comment": "make",
            "begin": "\\b(make)\\b",
            "end": "[,\\)]",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.shnootalk"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.shnootalk"
                }
            },
            "patterns": [
                {
                    "include": "#type"
                }
            ]
        },
        {
            "comment": "sizeof",
            "begin": "\\b(sizeof)\\b",
            "end": "\\)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.shnootalk"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.shnootalk"
                }
            },
            "patterns": [
                {
                    "include": "#type"
                }
            ]
        },
        {
            "comment": "Function",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
            "captures": {
                "1": {
                    "name": "entity.name.function.shnootalk"
                },
                "2": {
                    "name": "punctuation.shnootalk"
                }
            }
        },
        {
            "comment": "Generic function call",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\[.*\\])\\s*(\\()",
            "captures": {
                "1": {
                    "name": "entity.name.function.shnootalk"
                },
                "2": {
                    "patterns": [
                        {
                            "include": "#type"
                        }
                    ]
                },
                "3": {
                    "name": "punctuation.shnootalk"
                }
            }
        },
        {
            "comment": "User defined type definition",
            "begin": "\\b(struct|class)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
            "end": "\\{",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.shnootalk"
                },
                "2": {
                    "name": "entity.name.type.shnootalk"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.shnootalk"
                }
            }
        },
        {
            "comment": "Generic declaration",
            "begin": "generic",
            "end": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?!,)",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.shnootalk"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "entity.name.type.shnootalk"
                }
            },
            "patterns": [
                {
                    "name": "entity.name.type.shnootalk",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
                },
                {
                    "include": "#punctuators"
                }
            ]
        },
        {
            "comment": "Used defined enum and def",
            "name": "storage.type.shnootalk",
            "match": "\\b(enum|def)\\b"
        },
        {
            "comment": "Module scope",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(::)",
            "captures": {
                "1": {
                    "name": "entity.name.namespace.shnootalk"
                },
                "2": {
                    "name": "punctuation.shnootalk"
                }
            }
        },
        {
            "comment": "Local type or parameter type or function return type",
            "begin": "((:)(?!\\=))|(->)",
            "end": "((\\])(?=\\s*[^\\],]))|(\\b([a-zA-Z_][a-zA-Z0-9_]*)(?=(\\s*(:[^:])))|\\))|(\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=[^:,\\[\\]]))",
            "patterns": [
                {
                    "include": "#type"
                }
            ],
            "beginCaptures": {
                "0": {
                    "name": "punctuation.shnootalk"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation.shnootalk"
                },
                "3": {
                    "name": "variable.name.shnootalk"
                },
                "7": {
                    "name": "entity.name.type.shnootalk"
                }
            }
        },
        {
            "comment": "Cast type",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\[\\]`|\\*`|`)",
            "captures": {
                "1": {
                    "name": "entity.name.type.shnootalk"
                }
            }
        },
        {
            "include": "#punctuators"
        },
        {
            "comment": "Symbol or identifier",
            "name": "variable.name.shnootalk",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
    ],
    "repository": {
        "literals": {
            "patterns": [
                {
                    "comment": "String literal",
                    "name": "string.quoted.double.shnootalk",
                    "begin": "\"|'",
                    "end": "\"|'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.shnootalk",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "comment": "Hex literal",
                    "name": "constant.numeric.integer.hexadecimal.shnootalk",
                    "match": "\\b(0x[a-fA-f0-9]+)\\b"
                },
                {
                    "comment": "Bin literal",
                    "name": "constant.numeric.shnootalk",
                    "match": "\\b(0b[0-1]+)\\b"
                },
                {
                    "comment": "Float literal",
                    "name": "constant.numeric.shnootalk",
                    "match": "\\b([0-9]*\\.[0-9]+)\\b"
                },
                {
                    "comment": "Integer literal",
                    "name": "constant.numeric.shnootalk",
                    "match": "\\b([0-9]+)\\b"
                },
                {
                    "comment": "Boolean literal",
                    "name": "constant.language.boolean.shnootalk",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "comment": "Keywords",
                    "name": "keyword.control.shnootalk",
                    "match": "\\b(use|as|from|begin|end|if|elif|else|while|do|for|loop|break|continue|return|void)\\b"
                },
                {
                    "comment": "Local or param or struct field declaration type",
                    "name": "storage.type.shnootalk",
                    "match": "\\b(var|const|mut)\\b"
                },
                {
                    "comment": "Function declaration keywords",
                    "name": "storage.type.shnootalk",
                    "match": "\\b(fn|extfn|externC)\\b"
                }
            ]
        },
        "punctuators": {
            "patterns": [
                {
                    "match": "(\\(|\\)|\\[|\\]|,|\\{|\\}|::|:|->)",
                    "name": "punctuation.shnootalk"
                }
            ]
        },
        "type": {
            "patterns": [
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(::)",
                    "captures": {
                        "1": {
                            "name": "entity.name.namespace.shnootalk"
                        },
                        "2": {
                            "name": "punctuation.shnootalk"
                        }
                    }
                },
                {
                    "name": "entity.name.type.shnootalk",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
                },
                {
                    "include": "#literals"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#punctuators"
                }
            ]
        }
    },
    "scopeName": "source.shnootalk"
}