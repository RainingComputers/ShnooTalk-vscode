{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "ShnooTalk",
    "patterns": [
        {
            "comment": "Single line comment",
            "name": "comment.line.number-sign.shnootalk",
            "match": "#[^\n\r]*"
        },
        {
            "comment": "Keywords",
            "name": "keyword.control.shnootalk",
            "match": "\\b(use|from|begin|end|if|elif|else|while|for|break|continue|return|void)\\b"
        },
        {
            "comment": "Built in functions",
            "name": "support.function.shnootalk",
            "match": "\\b(sizeof|print|println|input|exit)\\b"
        },
        {
            "comment": "Conditional operators",
            "name": "keyword.operator.shnootalk",
            "match": "\\b(and|or|not)\\b"
        },
        {
            "comment": "String literal",
            "name": "string.quoted.double.shnootalk",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.shnootalk",
                    "match": "\\\\."
                }
            ]
        },
        {
            "comment": "Character literal",
            "name": "string.quoted.single.shnootalk",
            "match": "'\\\\?.'"
        },
        {
            "comment": "Integer literal",
            "name": "constant.numeric.shnootalk",
            "match": "([0-9]+)"
        },
        {
            "comment": "Hex literal",
            "name": "constant.numeric.shnootalk",
            "match": "(0x[a-fA-f0-9]+)"
        },
        {
            "comment": "Bin literal",
            "name": "constant.numeric.shnootalk",
            "match": "(0b[0-1]+)"
        },
        {
            "comment": "Float literal",
            "name": "constant.numeric.shnootalk",
            "match": "([0-9]*\\.[0-9]+)"
        },
        {
            "comment": "Boolean literal",
            "name": "constant.language.boolean.shnootalk",
            "match": "\\b(true|false)\\b"
        },
        {
            "comment": "Declaration type",
            "name": "storage.type.shnootalk",
            "match": "\\b(var|const|mut)\\b"
        },
        {
            "comment": "'fn' keyword",
            "name": "storage.type.shnootalk",
            "match": "\\b(fn|extfn)\\b"
        },
        {
            "comment": "Function name",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\(",
            "captures": {
                "1": {
                    "name": "support.function.shnootalk"
                }
            }
        },
        {
            "comment": "User defined type definition",
            "begin": "\\b(struct|class)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
            "end": "[\\{\\(;]",
            "beginCaptures": {
                "1": {
                    "name": "storage.type.shnootalk"
                },
                "2": {
                    "name": "entity.name.type.shnootalk"
                }
            }
        },
        {
            "comment": "Used defined enum and def",
            "name": "storage.type.shnootalk",
            "match": "\\b(enum|def)\\b"
        },
        {
            "comment": "Primitive type",
            "match": "\\b(byte|ubyte|char|short|ushort|int|uint|long|ulong|float|double|bool|void)\\b",
            "name": "entity.name.type.shnootalk"
        },
        {
            "comment": "Type",
            "begin": "(:|->)",
            "end": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b[^:]",
            "endCaptures": {
                "1": {
                    "name": "entity.name.type.shnootalk"
                }
            }
        },
        {
            "comment": "Module scope",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(::)\\b",
            "captures": {
                "1": {
                    "name": "source.shnootalk"
                }
            }
        },
        {
            "comment": "Symbol or identifier",
            "name": "variable.name.shnootalk",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
        }
    ],
    "scopeName": "source.shnootalk"
}